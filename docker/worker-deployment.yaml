apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.30.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: worker
  name: worker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.30.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-default: "true"
        io.kompose.service: worker
    spec:
      containers:
        - env:
            - name: CELERY_BROKER_URL
              value: redis://:difyai123456@redis:6379/1
            - name: DB_DATABASE
              value: dify
            - name: DB_HOST
              value: db
            - name: DB_PASSWORD
              value: difyai123456
            - name: DB_PORT
              value: "5432"
            - name: DB_USERNAME
              value: postgres
            - name: LOG_LEVEL
              value: INFO
            - name: MODE
              value: worker
            - name: REDIS_DB
              value: "0"
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PASSWORD
              value: difyai123456
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_USERNAME
            - name: REDIS_USE_SSL
              value: "false"
            - name: SECRET_KEY
              value: sk-9f73s3ljTXVcMT3Blb3ljTqtsKiGHXVcMT3BlbkFJLK7U
            - name: STORAGE_LOCAL_PATH
              value: storage
            - name: STORAGE_TYPE
              value: local
            - name: VECTOR_STORE
              value: weaviate
            - name: WEAVIATE_API_KEY
              value: WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih
            - name: WEAVIATE_ENDPOINT
              value: http://weaviate:8080
          image: nexussbxchatbot.azurecr.io/chatbot/dify-api
          name: worker
          resources: {}
          volumeMounts:
            - mountPath: /app/api/storage
              name: api-storage
      restartPolicy: Always
      volumes:
        - name: api-storage
          persistentVolumeClaim:
            claimName: api-storage
status: {}
