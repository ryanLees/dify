# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    # - task: DockerCompose@0
    #   displayName: Build services
    #   inputs:
    #     action: 'Build services'
    #     containerregistrytype: 'Container Registry'
    #     dockerRegistryEndpoint: 'nexusPocChatbot'
    #     dockerComposeFile: '$(Build.SourcesDirectory)/docker/docker-compose.yaml'
    #     dockerComposeCommand: 'build'
        
    # - task: DockerCompose@0
    #   displayName: Push services
    #   inputs:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'Hexagon MI Nexus - sbx(6d1a72c8-14d3-4453-b9c0-fc3bbd6c82d5)'
        appName: 'nexus-poc-chatbot'
        multicontainerConfigFile: '$(Build.SourcesDirectory)/docker/docker-compose.yaml'
        containerCommand: 'docker compose up -d'
    #     action: Push services
    #     containerregistrytype: 'Container Registry'
    #     dockerComposeFile: '$(Build.SourcesDirectory)/docker/docker-compose.yaml'
    #     projectName: $(Build.Repository.Name)
    #     qualifyImageNames: true
    #     additionalImageTags: $(Build.BuildId)

    # - task: AzureContainerApps@1
    #   inputs:
    #     appSourcePath: '$(Build.SourcesDirectory)/docker'
    #     azureSubscription: 'Hexagon MI Nexus - sbx(6d1a72c8-14d3-4453-b9c0-fc3bbd6c82d5)'
    #     acrName: 'nexusPocChatbot'
    #     acrUsername: 'nexusPocChatbot'
    #     acrPassword: 'ThHs0At2kekBPhyR8UI4L0e99xamSKLGBntRapFXyJ+ACRCf+JpN'
    #     containerAppName: 'nexus-poc-chatbot'
    #     resourceGroup: 'nexus-sbx-chatbot'